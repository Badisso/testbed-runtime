DROP DATABASE IF EXISTS trauth;
CREATE DATABASE IF NOT EXISTS trauth;
USE trauth;

-- this is necessary when using mysql to enable foreign keys
SET storage_engine=INNODB;

-- remove the comments of the following two lines when using derby in memory data base
-- connect 'jdbc:derby:memory:derbyDB';
-- use enterprise_it_ep00;

DROP TABLE IF EXISTS ACTIONS;
CREATE TABLE ACTIONS ( NAME VARCHAR(30) NOT NULL, PRIMARY KEY (NAME) ) ;
insert into ACTIONS (NAME) values ('RS_DELETE_RESERVATION');
insert into ACTIONS (NAME) values ('RS_GET_RESERVATIONS');
insert into ACTIONS (NAME) values ('RS_MAKE_RESERVATION');
insert into ACTIONS (NAME) values ('SM_ARE_NODES_ALIVE');
insert into ACTIONS (NAME) values ('SM_FREE');
insert into ACTIONS (NAME) values ('WSN_ARE_NODES_ALIVE');
insert into ACTIONS (NAME) values ('WSN_DESTROY_VIRTUAL_LINK');
insert into ACTIONS (NAME) values ('WSN_DISABLE_NODE');
insert into ACTIONS (NAME) values ('WSN_DISABLE_PHYSICAL_LINK');
insert into ACTIONS (NAME) values ('WSN_ENABLE_NODE');
insert into ACTIONS (NAME) values ('WSN_ENABLE_PHYSICAL_LINK');
insert into ACTIONS (NAME) values ('WSN_FLASH_PROGRAMS');
insert into ACTIONS (NAME) values ('WSN_RESET_NODES');
insert into ACTIONS (NAME) values ('WSN_SEND');
insert into ACTIONS (NAME) values ('WSN_SET_CHANNEL_PIPELINE');
insert into ACTIONS (NAME) values ('WSN_SET_VIRTUAL_LINK');
insert into ACTIONS (NAME) values ('WSN_SUBSCRIBE');
insert into ACTIONS (NAME) values ('*');
DROP TABLE IF EXISTS PERMISSIONS;
CREATE TABLE PERMISSIONS ( ROLE_NAME VARCHAR(150) NOT NULL, ACTION_NAME VARCHAR(30) NOT NULL, RESOURCEGROUP_NAME VARCHAR(40) ) ;
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('ADMINISTRATOR', '*', '*');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'RS_DELETE_RESERVATION', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'RS_DELETE_RESERVATION', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'RS_GET_RESERVATIONS', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'RS_MAKE_RESERVATION', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'SM_ARE_NODES_ALIVE', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'SM_FREE', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_ARE_NODES_ALIVE', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_DESTROY_VIRTUAL_LINK', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_DISABLE_NODE', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_DISABLE_PHYSICAL_LINK', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_ENABLE_NODE', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_ENABLE_PHYSICAL_LINK', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_FLASH_PROGRAMS', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_RESET_NODES', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_SEND', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_SET_CHANNEL_PIPELINE', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('EXPERIMENTER', 'WSN_SET_VIRTUAL_LINK', 'EXPERIMENT_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'RS_DELETE_RESERVATION', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'RS_DELETE_RESERVATION', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'RS_GET_RESERVATIONS', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'RS_MAKE_RESERVATION', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'SM_ARE_NODES_ALIVE', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'SM_FREE', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_ARE_NODES_ALIVE', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_DESTROY_VIRTUAL_LINK', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_DISABLE_NODE', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_DISABLE_PHYSICAL_LINK', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_ENABLE_NODE', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_ENABLE_PHYSICAL_LINK', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_FLASH_PROGRAMS', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_RESET_NODES', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_SEND', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_SET_CHANNEL_PIPELINE', 'SERVICE_NODES');
insert into PERMISSIONS (ROLE_NAME, ACTION_NAME, RESOURCEGROUP_NAME) values ('SERVICE_PROVIDER', 'WSN_SET_VIRTUAL_LINK', 'SERVICE_NODES');
DROP TABLE IF EXISTS RESOURCEGROUPS;
CREATE TABLE RESOURCEGROUPS ( NAME VARCHAR(40) NOT NULL, PRIMARY KEY (NAME) ) ENGINE=InnoDB;
insert into RESOURCEGROUPS (NAME) values ('EXPERIMENT_NODES');
insert into RESOURCEGROUPS (NAME) values ('SERVICE_NODES');
insert into RESOURCEGROUPS (NAME) values ('*');
DROP TABLE IF EXISTS ROLES;
CREATE TABLE ROLES ( NAME VARCHAR(150) NOT NULL, PRIMARY KEY (NAME) ) ENGINE=InnoDB;
insert into ROLES (NAME) values ('ADMINISTRATOR');
insert into ROLES (NAME) values ('EXPERIMENTER');
insert into ROLES (NAME) values ('SERVICE_PROVIDER');
DROP TABLE IF EXISTS URN_RESOURCEGROUPS;
CREATE TABLE URN_RESOURCEGROUPS ( URN VARCHAR(255) NOT NULL, RESOURCEGROUP VARCHAR(40) NOT NULL, PRIMARY KEY (URN, RESOURCEGROUP) ) ;
insert into URN_RESOURCEGROUPS (URN, RESOURCEGROUP) values ('urn:wisebed:ulanc1:0x2345', 'EXPERIMENT_NODES');
insert into URN_RESOURCEGROUPS (URN, RESOURCEGROUP) values ('urn:wisebed:ulanc1:0x3456', 'SERVICE_NODES');
DROP TABLE IF EXISTS USERS;
CREATE TABLE USERS ( NAME VARCHAR(150) NOT NULL, PASSWORD VARCHAR(1500), SALT VARCHAR(1500), PRIMARY KEY (NAME) ) ;
insert into USERS (NAME, PASSWORD, SALT) values ('Experimenter1', 'Pass1', 'Salt1');
insert into USERS (NAME, PASSWORD, SALT) values ('Administrator2', 'Pass2', 'Salt2');
insert into USERS (NAME, PASSWORD, SALT) values ('ServiceProvider3', 'Pass3', 'Salt3');
DROP TABLE IF EXISTS USERS_ROLES;
CREATE TABLE USERS_ROLES ( ROLE_NAME VARCHAR(150) NOT NULL, USER_NAME VARCHAR(150) NOT NULL, PRIMARY KEY (ROLE_NAME, USER_NAME) ) ;
insert into USERS_ROLES (ROLE_NAME, USER_NAME) values ('ADMINISTRATOR', 'Administrator2');
insert into USERS_ROLES (ROLE_NAME, USER_NAME) values ('EXPERIMENTER', 'Experimenter1');
insert into USERS_ROLES (ROLE_NAME, USER_NAME) values ('SERVICE_PROVIDER', 'ServiceProvider3');
ALTER TABLE PERMISSIONS ADD CONSTRAINT PERMISSIONS_FK1 FOREIGN KEY (ROLE_NAME) REFERENCES ROLES (NAME);
ALTER TABLE PERMISSIONS ADD CONSTRAINT PERMISSIONS_FK2 FOREIGN KEY (ACTION_NAME) REFERENCES ACTIONS (NAME);
ALTER TABLE PERMISSIONS ADD CONSTRAINT PERMISSIONS_FK3 FOREIGN KEY (RESOURCEGROUP_NAME) REFERENCES RESOURCEGROUPS (NAME);
ALTER TABLE URN_RESOURCEGROUPS ADD CONSTRAINT URN_RESOURCEGROUPS_FK1 FOREIGN KEY (RESOURCEGROUP) REFERENCES RESOURCEGROUPS (NAME);
ALTER TABLE USERS_ROLES ADD CONSTRAINT USERS_ROLES_FK2 FOREIGN KEY (USER_NAME) REFERENCES USERS (NAME);
ALTER TABLE USERS_ROLES ADD CONSTRAINT USERS_ROLES_FK3 FOREIGN KEY (ROLE_NAME) REFERENCES ROLES (NAME);

-- remove the comments of the following two lines when using derby in memory data base
-- commit;
-- disconnect all;