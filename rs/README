  Testbed Runtime 0.5.2-SNAPSHOT

WHAT IS 'RS'?

  The RS (Reservation System) is part of the european research project WISEBED [1] and
  implements a system that is responsible for reserving a set of nodes for a period of 
  time for a specific user. This system includes three different implementations:
    - Single URN Prefix
    - Federator
    - Dummy

  Single URN Prefix:
    The implementation for a single testbed is called "Single URN Prefix" and handles
    reservations for a single testbed which is identified by a URN prefix (e.g., urn:wisebed:uzl:
    for 2 nodes urn:wisebed:uzl:1 and urn:wisebed:uzl:2).
    This implementation can be configured to use different backend storage systems.
    This currently includes configurable storage in a database system, in-memory storage,
    and a storage backend that uses Google Calendar to store its data.

  Federator:
    A federator accepts multiple urn prefixes and delegates the requests to the responsible
    instances, aggregates the results and returns them to the client.

  Dummy:
    The dummy implementation can be used for testing and does not perform any real reservation.

BUILDING

  RS is based on the Apache Maven 2 [2] build system.
  Simply run 'mvn package' or 'mvn install' for building.

RUNNING

  For executing the RS in a commandline environment you'll find the module called rs-cmdline
  in its subfolder.
  Just delegate to the subfolder 'rs-cmdline' and call 'mvn package' or 'mvn install'.
  Afterwards you'll find the executable jar in the target directory.

  Options:
    Calling the jar file there are 3 different options:
      -f,--file <arg>   The properties file (mandatory)
      -h,--help         Help output (optional)
      -v,--verbose      Verbose logging output (optional)

  Properties file:
    Setting up your RS environment you need to specify a configuration file. There is a sample
    configuration file located in the configs subfolder of the rs-cmdline module including a small
    description of possible properties and their meanings.
    
  For using your properties file simply add it to the commandline input, e.g. for using the current
  snapshot with the sample-properties file in the configs-folder just call
   'java -jar target/tr.rs-cmdline-0.5.2-SNAPSHOT.one-jar.jar -f configs/sample.properties'


The modules are made open-source under the terms of the BSD license, was created and is
maintained by the Institute of Telematics, University of Luebeck, Germany.

REFERENCES

  [1] http://www.wisebed.eu/
  [2] http://maven.apache.org/
  [3] https://www.itm.uni-luebeck.de/projects/testbed-runtime/
